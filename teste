

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui") 

local loadingGui = Instance.new("ScreenGui")
loadingGui.Name = "LoadingGui"
loadingGui.Parent = playerGui

local loadingImage = Instance.new("ImageLabel")
loadingImage.Size = UDim2.new(0, 400, 0, 250) -- ajuste o tamanho conforme necessário
loadingImage.Position = UDim2.new(0.5, -200, 0.5, -125) -- centraliza a imagem com base no tamanho
loadingImage.Image = "rbxassetid://129033885767273" -- substitua pelo ID da sua imagem
loadingImage.BackgroundTransparency = 1
loadingImage.Parent = loadingGui

-- Aguardar um pouco antes de carregar o Fluent (simulando carregamento)
wait(3)

-- Remover a GUI de carregamento após o tempo de espera
loadingGui:Destroy()

--GWQEGQW
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")
local StatsService = game:GetService("Stats")

local PlaceId = game.PlaceId
local ProductInfo = MarketplaceService:GetProductInfo(PlaceId)
local GameName = ProductInfo.Name
local Plr = game.Players.LocalPlayer
local Char = Plr.Character
local Humanoid = Char:WaitForChild("Humanoid")

-- Cria a janela com o nome do executor, nome do jogo, plataforma e ping
local Window = Fluent:CreateWindow({
    Title = "With ❤️ Nami Hub -",
    SubTitle = GameName,
    TabWidth = 105,
    Size = UDim2.fromOffset(450, 300),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Infor = Window:AddTab({ Title = "| Infor", Icon = "rbxassetid://18831448204" }),
    Autofarm = Window:AddTab({ Title = "| Auto Farm", Icon = "rbxassetid://18831441803" }),
    Player = Window:AddTab({ Title = "| Player", Icon = "rbxassetid://18326140820" }),
    GameMode = Window:AddTab({ Title = "| GameMode", Icon = "rbxassetid://18831457560" }),
    Hatch = Window:AddTab({ Title = "| Auto Hatch", Icon = "rbxassetid://18319580325" }),
    UI = Window:AddTab({ Title = "| UI", Icon = "rbxassetid://18831424669" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "rbxassetid://18319320531" }),
    Misc = Window:AddTab({ Title = "| Misc", Icon = "rbxassetid://18831424669" }),
    Settings = Window:AddTab({ Title = "| Settings", Icon = "rbxassetid://18831460044" })
}
Window:SelectTab(1)

Tabs.Infor:AddSection(" | Updated on 15/November/2024")

Tabs.Infor:AddSection("Discord")

-- Create a TextButton with the desired text
local button = Tabs.Infor:AddButton({
    Title = "Discord Official, Clickto copy discordy",
    Description = "discord.gg/dkhub",
    Callback = function()
        -- Function to copy text to the clipboard
        local function copyToClipboard(text)
            if setclipboard then
                setclipboard(text)
                print("Text copied: " .. text)
            else
                warn("The setclipboard function is not available in this environment.")
            end
        end

        -- Copy the desired text
        copyToClipboard("discord.gg/dkhub")
    end
})
local button = Tabs.Infor:AddButton({
    Title = "Robux Barato, Click to copy discord",
    Description = "discord.gg/aylahstore",
    Callback = function()
        -- Function to copy text to the clipboard
        local function copyToClipboard(text)
            if setclipboard then
                setclipboard(text)
                print("Text copied: " .. text)
            else
                warn("The setclipboard function is not available in this environment.")
            end
        end

        -- Copy the desired text
        copyToClipboard("discord.gg/aylahstore")
    end
})
Tabs.Infor:AddSection("Games Supported")


local button = Tabs.Infor:AddButton({
    Title = "Toggle Supported Games", -- Título do botão
    Description = "",
    Callback = function()
        -- Acessar o serviço Players e o Player local
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local playerGui = player:WaitForChild("PlayerGui")

        -- Verificar se a GUI de jogos já existe
        local loadingGui = playerGui:FindFirstChild("LoadingGui")

        -- Se a GUI não existir, cria uma nova
        if not loadingGui then
            loadingGui = Instance.new("ScreenGui")
            loadingGui.Name = "LoadingGui"
            loadingGui.Parent = playerGui

            -- Criar um quadro para exibir a lista de jogos
            local gamesFrame = Instance.new("Frame")
            gamesFrame.Size = UDim2.new(0.9, 0, 0.7, 0)
            gamesFrame.Position = UDim2.new(0.05, 0, 0.15, 0)
            gamesFrame.BackgroundTransparency = 0.3
            gamesFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            gamesFrame.BorderSizePixel = 0
            gamesFrame.Parent = loadingGui

            -- Adicionar a imagem no canto do quadro
            local backgroundImage = Instance.new("ImageLabel")
            backgroundImage.Size = UDim2.new(0.15, 0, 0.15, 0)
            backgroundImage.Position = UDim2.new(0.85, 0, 0.85, 0)
            backgroundImage.Image = "rbxassetid://18871582266" -- ID da imagem (troque pelo seu)
            backgroundImage.BackgroundTransparency = 1
            backgroundImage.Parent = gamesFrame

            -- Criar o título "Supported Games" dentro do quadro
            local titleLabel = Instance.new("TextLabel")
            titleLabel.Size = UDim2.new(1, 0, 0.15, 0)
            titleLabel.Position = UDim2.new(0, 0, 0, 0)
            titleLabel.BackgroundTransparency = 1
            titleLabel.Text = "Supported Games"
            titleLabel.TextColor3 = Color3.fromRGB(255, 100, 0)
            titleLabel.TextScaled = true
            titleLabel.Font = Enum.Font.SourceSansBold
            titleLabel.Parent = gamesFrame

            -- Lista dos jogos suportados
            local games = {
                "Dragon Merge Tycoon", "Duck Army!", "Anime Chaos Simulator",
                "Anime Ascensions Simulator", "Anime Blast Simulator", "Anime Destiny Simulator",
                "Anime Dungeon Fighters", "Anime Haven Simulator", "Anime Heroes Simulator",
                "Anime League", "Anime Max Simulator", "Anime Odyssey Simulator",
                "Anime Power Evolution Simulator", "Anime Protect Simulator",
                "Anime Punching Simulator 2", "Anime Racing 2", "Anime Realms By Voxer",
                "Anime Realms Simulator", "Anime Strike Simulator", "Anime Transform Simulator",
                "Anime Verse Simulator", "Anime Vanguards", "Aqua Racer", "Arsenal",
                "Blade Slayer", "Demon Sword Reincarnation", "Dragon Merge Tycoon",
                "Duck Army!", "Fat Race", "Gunfight Arena", "Lost Souls",
                "Magic Blade Simulator", "Magic Fighting Simulator", "Murder Mystery 2",
                "Pet Fighters Simulator", "Power Slap Simulator", "Princess Fighter Simulator",
                "Rebirth Champions X", "Reborn As Swordman", "Reborn As Swordsman",
                "RE: XL", "Scythe Simulator", "Slayer Corps", "Sword Warrior Simulator",
                "Swordmaster Simulator", "Timber2", "Ultimate Anime Simulator",
                "Warrior Simulator", "Weapon Fighting Simulator", "Swim League", "Anime Slashing Simulator",
                "Anime Revolution X"
            }

            -- Dividir a lista em três colunas
            local columnSize = math.ceil(#games / 3)
            local firstColumn = table.concat(games, "\n", 1, columnSize)
            local secondColumn = table.concat(games, "\n", columnSize + 1, columnSize * 2)
            local thirdColumn = table.concat(games, "\n", columnSize * 2 + 1, #games)

            -- Criar a primeira coluna
            local firstColumnLabel = Instance.new("TextLabel")
            firstColumnLabel.Size = UDim2.new(0.32, 0, 0.85, 0)
            firstColumnLabel.Position = UDim2.new(0.02, 0, 0.15, 0)
            firstColumnLabel.BackgroundTransparency = 1
            firstColumnLabel.Text = firstColumn
            firstColumnLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            firstColumnLabel.TextSize = 16
            firstColumnLabel.TextWrapped = true
            firstColumnLabel.TextXAlignment = Enum.TextXAlignment.Left
            firstColumnLabel.Font = Enum.Font.SourceSansBold
            firstColumnLabel.Parent = gamesFrame

            -- Criar a segunda coluna
            local secondColumnLabel = Instance.new("TextLabel")
            secondColumnLabel.Size = UDim2.new(0.32, 0, 0.85, 0)
            secondColumnLabel.Position = UDim2.new(0.34, 0, 0.15, 0)
            secondColumnLabel.BackgroundTransparency = 1
            secondColumnLabel.Text = secondColumn
            secondColumnLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            secondColumnLabel.TextSize = 16
            secondColumnLabel.TextWrapped = true
            secondColumnLabel.TextXAlignment = Enum.TextXAlignment.Left
            secondColumnLabel.Font = Enum.Font.SourceSansBold
            secondColumnLabel.Parent = gamesFrame

            -- Criar a terceira coluna
            local thirdColumnLabel = Instance.new("TextLabel")
            thirdColumnLabel.Size = UDim2.new(0.32, 0, 0.85, 0)
            thirdColumnLabel.Position = UDim2.new(0.66, 0, 0.15, 0)
            thirdColumnLabel.BackgroundTransparency = 1
            thirdColumnLabel.Text = thirdColumn
            thirdColumnLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            thirdColumnLabel.TextSize = 16
            thirdColumnLabel.TextWrapped = true
            thirdColumnLabel.TextXAlignment = Enum.TextXAlignment.Left
            thirdColumnLabel.Font = Enum.Font.SourceSansBold
            thirdColumnLabel.Parent = gamesFrame

            -- Criar o botão de fechar
            local closeButton = Instance.new("TextButton")
            closeButton.Size = UDim2.new(0.1, 0, 0.1, 0)
            closeButton.Position = UDim2.new(0.9, 0, 0, 0)
            closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            closeButton.Text = "X"
            closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            closeButton.Font = Enum.Font.SourceSansBold
            closeButton.TextScaled = true
            closeButton.Parent = gamesFrame

            -- Função para fechar a GUI ao clicar no botão
            closeButton.MouseButton1Click:Connect(function()
                loadingGui:Destroy() -- fecha a GUI
            end)

        else
            -- Se a GUI já existir, você a remove
            loadingGui:Destroy()
        end
    end
})



Tabs.Infor:AddSection(" | Executors Supported")
Tabs.Infor:AddParagraph({
    Title = "EXECUTORS",
    Content = "🟢Working\n🟡idk\n🔴Not Working"
})
Tabs.Infor:AddParagraph({
    Title = "Status",
    Content = "🟢Solara\n🟢Wave\n🟢Fluxus\n🟢Delta\n🟢Apple-Ware\n🟢Codex\n🟢Arceus\n🟢Nezur\n🟢Vega\n🟢Tigron\n🟢Cryptic"
})


-- Define a função globalmente
function GetRemoteEvent()
    for _, child in ipairs(game.ReplicatedStorage:GetChildren()) do
        if child:IsA("Folder") then
            for _, remote in ipairs(child:GetChildren()) do
                if remote:IsA("RemoteEvent") then
                    return remote
                end
            end
        end
    end
    return nil
end

Tabs.GameMode:AddSection("Trial")

Tabs.GameMode:AddSection("Raid")

local Remote = GetRemoteEvent()

-- Variáveis para armazenar argumentos de acordo com a raid selecionada
local raidSettings = {
    Spooky = {args5 = -14, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.SpookyRaid.Wave.Text"},
    Defense = {args5 = -18, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.Defense.Wave.Text"},
    Alabasto = {args5 = -10, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.AlabastoRaid.Wave.Text"},
    Clover = {args5 = -12, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.CloverRaid.Wave.Text"},
    Tower = {args5 = -16, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.Tower.Wave.Text"},
    SpookyDefense = {args5 = -152, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.SpookyDefense.Wave.Text"},
    JJCorridor = {args5 = -20, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.Corridor.Wave.Text"},
    RagnarokRaid = {args5 = -22, wavePath = "game:GetService('Players').LocalPlayer.PlayerGui.Animation.RagnarokRaid.Wave.Text"}
}

local selectedRaid = "SpookyDefense" -- Define um padrão
local targetWave = 5 -- Defina o valor padrão para a wave

-- Dropdown para selecionar o tipo de raid
local RaidDropdown = Tabs.GameMode:AddDropdown("SelectRaid", {  
    Title = "Select Raid",
    Values = {"Spooky", "Defense", "Alabasto", "Clover", "Tower", "SpookyDefense", "JJCorridor", "RagnarokRaid"},
    Default = "SpookyDefense",
    Multi = false,
    Callback = function(value)
        selectedRaid = value
    end
})

-- Input para número da wave
local PlayerNameInput = Tabs.GameMode:AddInput("PlayerNameInput", {
    Title = "Leave Wave",
    Default = tostring(targetWave),
    Numeric = true,
    Finished = false,
    Placeholder = "Leave Wave",
    Callback = function(value)
        targetWave = tonumber(value) or targetWave
    end
})

local RankUp = Tabs.GameMode:AddToggle("RankUp", {Title = "Auto Raid", Default = false})
local Teleporting = false

-- Função para iniciar a raid
local function startRaid()
    Teleporting = false -- Pausa AutoMobs antes de enviar o start
    if Remote then
        local startArgs = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = raidSettings[selectedRaid].args5
        }
        -- Envia o comando de startRaid duas vezes com uma pausa de 2 segundos entre os envios
        Remote:FireServer(unpack(startArgs))
        wait(2) -- Aguarda 2 segundos
        Remote:FireServer(unpack(startArgs))
    end
    wait(2) -- Aguarda mais 2 segundos antes de ativar AutoMobs
    Teleporting = true
end

-- Função para pausar o auto mobs e sair da raid
local function leaveRaid()
    Teleporting = false -- Pausa AutoMobs antes de enviar o leave
    if Remote then
        local leaveArgs = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = -150
        }
        Remote:FireServer(unpack(leaveArgs))
    end
end

RankUp:OnChanged(function()
    if RankUp.Value then
        startRaid()

        -- Loop para verificar o wave atual e gerenciar o teleporte
        spawn(function()
            while RankUp.Value do
                local wavePath = raidSettings[selectedRaid].wavePath
                local currentWaveText = loadstring("return " .. wavePath)() -- Carrega o texto da wave dinamicamente
                local currentWave = tonumber(currentWaveText:match("%d+")) or 0

                -- Pausar AutoMobs temporariamente ao atingir a wave alvo
                if currentWave >= targetWave then
                    Teleporting = false -- Pausa AutoMobs antes de enviar o leave
                    leaveRaid()
                    wait(2)
                    startRaid()
                end
                wait(0.1)
            end
        end)
    else
        Teleporting = false
    end
end)

local maxDistance = 150 -- Altere esse valor conforme necessário
local teleportCooldown = 0.5 -- Tempo de cooldown entre teleportes
local lastTeleportTime = 0
local lastTarget -- Armazena o último inimigo teleportado

-- Função de teleporte automático para inimigos
game:GetService("RunService").Heartbeat:Connect(function()
    if Teleporting then
        local currentTime = tick() -- Obtém o tempo atual
        if currentTime - lastTeleportTime < teleportCooldown then
            return -- Sai da função se o cooldown não tiver passado
        end

        local playerCharacter = game.Players.LocalPlayer.Character
        if playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart") then
            local playerPosition = playerCharacter.HumanoidRootPart.Position

            for _, enemy in ipairs(workspace._Enemies:GetChildren()) do
                if enemy:FindFirstChild("HumanoidRootPart") then
                    local health = enemy:GetAttribute("Health")
                    if health and health > 0 then
                        local enemyPosition = enemy.HumanoidRootPart.Position
                        local distance = (enemyPosition - playerPosition).Magnitude
                        
                        -- Verifica se o inimigo está dentro do alcance permitido e não é o último alvo
                        if distance <= maxDistance and enemy ~= lastTarget then
                            -- Teleporta para o inimigo se ele estiver dentro do alcance
                            local targetCFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4)
                            playerCharacter.HumanoidRootPart.CFrame = targetCFrame
                            
                            -- Atualiza o tempo e o último alvo
                            lastTeleportTime = currentTime
                            lastTarget = enemy
                            
                            break -- Sai do loop após encontrar um inimigo válido
                        end
                    end
                end
            end
        end
    end
end)





Tabs.Teleport:AddSection(" Teleport")


-- Use a função
local Remote = GetRemoteEvent()

-- Function to teleport the player to a specified position
local function teleportTo(targetCFrame)
    local character = game.Players.LocalPlayer.Character
    if character then
        character:SetPrimaryPartCFrame(targetCFrame)
    end
end

-- Button to teleport to "Bankais"
Tabs.Teleport:AddButton({
    Title = "Teleport to Kekkei Genkai",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 0
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions["Kekkei Genkai"].Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport to Identical",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 1
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Identical.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Marks",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 2
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Marks.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Demon Arts",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 2
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions["Demon Arts"].Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport to Range",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 3
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Range.Magnitude.CFrame)
    end
})


Tabs.Teleport:AddButton({
    Title = "Teleport to Families",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 3
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Families.Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport to Titans",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 3
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Titans.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Class",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 4
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Class.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Bankais",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 4
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Bankais.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Primary Grimoires",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 5
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions["Primary Grimoires"].Magnitude.CFrame)
    end
})

Tabs.Teleport:AddButton({
    Title = "Teleport to Secondary Grimoires",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 5
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions["Secondary Grimoires"].Magnitude.CFrame)
    end
})

Tabs.Teleport:AddSection("Hunter City")

Tabs.Teleport:AddButton({
    Title = "Teleport Ren",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 6
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Ren.Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport Ten",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 6
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Ten.Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport Nen",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 6
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Ten.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddSection("JJ Scholl")
Tabs.Teleport:AddButton({
    Title = "Teleport Domain Expansion",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 7
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions["Domain Expansion"].Magnitude.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport Curses",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 7
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._Interactions.Curses.Magnitude.CFrame)
    end
})

Tabs.Teleport:AddSection("Power")

Tabs.Teleport:AddButton({
    Title = "Teleport to 2x Power",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = 5
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._TrainingArea.EnergyArea.Union.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport to 4x Power",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = -18
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._TrainingArea:GetChildren()[2].Union.CFrame)
    end
})
Tabs.Teleport:AddButton({
    Title = "Teleport to 8x Power",
    Callback = function()
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Islands",
            [4] = "Teleport",
            [5] = -450
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(2)
        teleportTo(workspace._TrainingArea:GetChildren()[3].Union.CFrame)
    end
})






-- Cria o botão
local button = Tabs.Hatch:AddButton({
    Title = "Destroy Animation Egg",
    Description = "",
    Callback = function()
        -- Acessa o módulo através do caminho correto
        local PetService = require(game:GetService("ReplicatedStorage"):WaitForChild("VinnyFramework"):WaitForChild("Library"):WaitForChild("Services"):WaitForChild("PetService"))

        -- Guarda a função original para chamá-la mais tarde
        local OriginalCreateSummon = PetService.CreateSummon

        -- Substitui a função CreateSummon para ignorar as animações
        PetService.CreateSummon = function(p16, p_u_17, p_u_18, p_u_19)
            p_u_18 = 0 -- Define o valor para 0 para desativar a animação
            return OriginalCreateSummon(p16, p_u_17, p_u_18, p_u_19)
        end
    end
})


-- Use a função
local Remote = GetRemoteEvent()

-- Dropdown para selecionar o egg
local EggDropdown = Tabs.Hatch:AddDropdown("SelectEgg", { 
    Title = "Select Egg",
    Values = {"Naruto", "OnePiece", "DemonSlayer", "AttackOnTitan", "Bleach", "BlackClover", "HunterxHunter", "JJK", "JJKTWO", "RAGNAROK", "FIREFORCE"}, -- Adicione os nomes dos ovos disponíveis aqui
    Default = "FIREFORCE",
    Multi = false
})




-- Toggle para ativar o envio do RemoteEvent

local LoopToggle = Tabs.Hatch:AddToggle("LoopToggle", {Title = "Auto Hatch", Default = false}) 

LoopToggle:OnChanged(function()
    while LoopToggle.Value do
        local args = {
            [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
            [2] = "System",
            [3] = "Eggs",
            [4] = "Open",
            [5] = EggDropdown.Value -- Usando o valor selecionado na dropdown
        }

        if Remote then
            Remote:FireServer(unpack(args))
        end

        wait(.1) -- Ajuste o intervalo conforme necessário
    end
end)






local frames = {
    "Teleport",
    "Ranks",
    "Shiny",
    "Gacha",
    "Hakis",
    "RaidUpgrades",
    "AlabastoRaid",
    "JJMerchant",
}

for _, frameName in ipairs(frames) do
    Tabs.UI:AddButton({
        Title = "Toggle " .. frameName,
        Description = "",
        Callback = function()
            local frame = game.Players.LocalPlayer.PlayerGui.Center[frameName]
            if frame then
                frame.Visible = not frame.Visible
                frame.Position = UDim2.new(0.5, 0, 0.5, 0) -- Altera a posição do frame
            else
                warn("Frame '" .. frameName .. "' não encontrado.")
            end
        end
    })
end



-- Definindo as variáveis globais
local isAutoFarming = false
local selectedMobs = {}  -- Lista para armazenar os inimigos selecionados

-- Função para teletransportar para o inimigo mais próximo com vida
local function TeleportToMob()
    if #selectedMobs == 0 then
        return
    end

    local nearestNPC = nil
    local nearestDistance = math.huge

    for _, model in ipairs(game.Workspace._Enemies:GetChildren()) do
        if model:IsA("Model") and model:GetAttribute("Health") then
            local enemyHealth = model:GetAttribute("Health")
            local enemyName = model.Name

            if table.find(selectedMobs, enemyName) and enemyHealth > 0 then
                local playerPos = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
                local distance = (playerPos - model.PrimaryPart.Position).magnitude

                if distance < nearestDistance then
                    nearestNPC = model
                    nearestDistance = distance
                end
            end
        end
    end

    if nearestNPC then
        local destination = nearestNPC.PrimaryPart.CFrame * CFrame.new(0, 0, 4)
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = destination
        wait(0.1)
    end
end

-- Toggle para ativar/desativar o AutoFarm
local autofarmToggle = Tabs.Autofarm:AddToggle("autofarm", {
    Title = "AutoFarm",
    Default = false,
    Callback = function(Value)
        isAutoFarming = Value
        if isAutoFarming then
            spawn(function()
                while isAutoFarming do
                    wait(0.1)
                    TeleportToMob()
                end
            end)
        end
    end
})

-- Dropdown para selecionar múltiplos mobs
local Dropdown = Tabs.Autofarm:AddDropdown("Dropdown", {
    Title = "Select Mobs",
    Values = {},
    Multi = true,
    Default = {},
})

-- Atualiza a lista de mobs selecionados com base na seleção do usuário
Dropdown:OnChanged(function(Value)
    selectedMobs = {}
    for mobName, isSelected in pairs(Value) do
        if isSelected then
            table.insert(selectedMobs, mobName)
        end
    end
end)

-- Função para atualizar a lista de mobs no dropdown
local function RefreshMobList()
    local mobs = {}
    for _, model in ipairs(game.Workspace._Enemies:GetChildren()) do
        if model:IsA("Model") then
            local mobName = model.Name
            if not table.find(mobs, mobName) then
                table.insert(mobs, mobName)
            end
        end
    end
    if #mobs > 0 then
        Dropdown:SetValues(mobs)
    else
        Dropdown:SetValues({"No Enemies Found"})
    end
end

-- Chama a função de refresh ao iniciar o script para preencher a lista inicialmente
RefreshMobList()

-- Adiciona um botão para atualizar a lista de mobs manualmente
Tabs.Autofarm:AddButton({
    Title = "Refresh Mob List",
    Callback = RefreshMobList
})








local Remote = GetRemoteEvent()

local args = {

    [2] = "System",
    [3] = "TimeRewards",
    [4] = "Claim"
}

local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Collect All Reward", Default = false})

RankUp:OnChanged(function()
    while RankUp.Value do
        if Remote then
            for i = 1, 8 do
                args[5] = "Reward" .. i
                Remote:FireServer(unpack(args))
                wait(1) -- Aguarda 1 segundo entre cada envio
            end
            wait(30) -- Aguarda 30 segundos antes de reiniciar o processo
        end
    end
end)


local Remote = GetRemoteEvent()

local args = {

    [2] = "System",
    [3] = "Click",
    [4] = "Run"
}

local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Click", Default = false}) 

RankUp:OnChanged(function()
    while RankUp.Value do
        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(.1) -- Ajuste o intervalo de espera conforme necessário
    end
end)



Tabs.Player:AddSection(" | Others")


-- Função para extrair "x[número][letra opcional]" do texto
local function extractMultiplier(text)
    -- Procura pelo padrão "x" seguido de números, ponto decimal e letras opcionais (como k, M, B)
    local match = string.match(text, "x%d+%.?%d*[kMB]?")
    return match or text -- Retorna o match ou o texto original se não encontrar
end

-- Obtém o evento remoto
local Remote = GetRemoteEvent()

-- Argumentos para o evento remoto de RankUp
local rankArgs = {

    [2] = "System",
    [3] = "Ranks",
    [4] = "Up"
}

-- Argumentos para o evento remoto de Candy Up
local candyArgs = {

    [2] = "System",
    [3] = "Candys",
    [4] = "Up"
}

-- Argumentos para o evento remoto de Haki Up
local hakiArgs = {
    [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110101 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010000 01110101 01101110 01100011 01101000 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110100 00001010",
    [2] = "System",
    [3] = "Hakis",
    [4] = "Up"
}

-- Cria o Paragraph que vai mostrar as informações de upgrade
local statusParagraph = Tabs.Player:AddParagraph({
    Title = "Upgrade Information",
    Content = "Waiting for information..."
})

-- Função para atualizar o Paragraph com os textos de upgrade de Rank, Candys e Hakis
local function updateParagraph()
    -- Informações de Rank
    local currentRankMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Ranks.CurrentFrame.Mult.Text)
    local nextRankMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Ranks.NextFrame.Mult.Text)
    local rankPrice = game:GetService("Players").LocalPlayer.PlayerGui.Center.Ranks.Content.Up.Title.Text

    -- Informações de Candys
    local currentCandyMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Candys.CurrentFrame.Mult.Text)
    local nextCandyMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Candys.NextFrame.Mult.Text)
    local candyPrice = game:GetService("Players").LocalPlayer.PlayerGui.Center.Candys.Content.Up.Title.Text
    
    -- Informações de Hakis
    local currentHakiMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Hakis.CurrentFrame.Mult.Text)
    local nextHakiMult = extractMultiplier(game:GetService("Players").LocalPlayer.PlayerGui.Center.Hakis.NextFrame.Mult.Text)
    local hakiPrice = game:GetService("Players").LocalPlayer.PlayerGui.Center.Hakis.Content.Up.Title.Text
    
    -- Atualiza o Paragraph com o formato solicitado (sem divisões)
    statusParagraph:SetTitle("Upgrade Information")
    statusParagraph:SetDesc(
        "Ranks - Price: " .. rankPrice .. "\n" ..
        "Current: " .. currentRankMult .. " > Next: " .. nextRankMult .. "\n" ..
        "Candys - Price: " .. candyPrice .. "\n" ..
        "Current: " .. currentCandyMult .. " > Next: " .. nextCandyMult .. "\n" ..
        "Hakis - Price: " .. hakiPrice .. "\n" ..
        "Current: " .. currentHakiMult .. " > Next: " .. nextHakiMult
    )
end

-- Atualiza as informações assim que o script for executado
updateParagraph()

-- Toggle para ativar/desativar o Auto RankUp
local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Rank Up", Default = false}) 

-- Toggle para ativar/desativar o Auto Candy Up
local CandyUp = Tabs.Player:AddToggle("CandyUp", {Title = "Auto Candy Up", Default = false}) 

-- Toggle para ativar/desativar o Auto Haki Up
local HakiUp = Tabs.Player:AddToggle("HakiUp", {Title = "Auto Haki Up", Default = false})

-- Função que ativa o loop de RankUp e atualiza o Paragraph
RankUp:OnChanged(function()
    while RankUp.Value do
        -- Atualiza as informações no Paragraph a cada 1 segundo
        updateParagraph()

        -- Verifica e dispara o evento remoto para RankUp
        if Remote then
            Remote:FireServer(unpack(rankArgs))
        end

        wait(10) -- Atualiza a cada 1 segundo
    end
end)

-- Função que ativa o loop de CandyUp e atualiza o Paragraph
CandyUp:OnChanged(function()
    while CandyUp.Value do
        -- Atualiza as informações no Paragraph a cada 1 segundo
        updateParagraph()

        -- Verifica e dispara o evento remoto para CandyUp
        if Remote then
            Remote:FireServer(unpack(candyArgs))
        end

        wait(10) -- Atualiza a cada 1 segundo
    end
end)

-- Função que ativa o loop de HakiUp e atualiza o Paragraph
HakiUp:OnChanged(function()
    while HakiUp.Value do
        -- Atualiza as informações no Paragraph a cada 1 segundo
        updateParagraph()

        -- Verifica e dispara o evento remoto para HakiUp
        if Remote then
            Remote:FireServer(unpack(hakiArgs))
        end

        wait(10) -- Atualiza a cada 1 segundo
    end
end)


Tabs.Player:AddSection(" | JJMerchant")
local Remote = GetRemoteEvent()

local args = {

    [2] = "System",
    [3] = "Merchant",
    [4] = "Buy",
    [5] = "GemsPotion"
}

local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Buy GemsPotion", Default = false}) 

RankUp:OnChanged(function()
    while RankUp.Value do
        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(5) -- Ajuste o intervalo de espera conforme necessário
    end
end)
local Remote = GetRemoteEvent()

local args = {

    [2] = "System",
    [3] = "Merchant",
    [4] = "Buy",
    [5] = "LuckPotion"
}

local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Buy LuckPotion", Default = false}) 

RankUp:OnChanged(function()
    while RankUp.Value do
        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(5) -- Ajuste o intervalo de espera conforme necessário
    end
end)


local Remote = GetRemoteEvent()

local args = {

    [2] = "System",
    [3] = "Merchant",
    [4] = "Buy",
    [5] = "SukunaFinger"
}

local RankUp = Tabs.Player:AddToggle("RankUp", {Title = "Auto Buy SukunaFinger", Default = false}) 

RankUp:OnChanged(function()
    while RankUp.Value do
        if Remote then
            Remote:FireServer(unpack(args))
        end
        wait(5) -- Ajuste o intervalo de espera conforme necessário
    end
end)

Tabs.Autofarm:AddSection(" | Avatar")


local Players = game:GetService("Players") 
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local targetLevel = 50
local AttackRunning = false

-- Avatar data table
local Decompile = {
    ichigo = {
      UUID = "ichigo",
      Index = 9936,
      Name = "Ichigu",
      Rarity = "Rare",
      Multiplier = 48,
      Area = 4
    },
    finral = {
      UUID = "finral",
      Index = 9919,
      Name = "Finrau",
      Rarity = "Epic",
      Multiplier = 128,
      Area = 5
    },
    hashirama = {
      UUID = "hashirama",
      Index = 9995,
      Name = "Hashorama",
      Rarity = "Mythical",
      Multiplier = 10,
      Area = 0
    },
    mikasa = {
      UUID = "mikasa",
      Index = 9945,
      Name = "Mikasy",
      Rarity = "Legendary",
      Multiplier = 48,
      Area = 3
    },
    gonadultspooky = {
      UUID = "gonadultspooky",
      Index = 0,
      Name = "Gon Adult Spooky",
      Rarity = "Exclusive",
      Multiplier = 400,
      Area = -99
    },
    luffynika = {
      UUID = "luffynika",
      Index = 9886,
      Name = "Luffo Nika",
      Rarity = "Mutant",
      Multiplier = 4000,
      Area = 6
    },
    killuagodspeed = {
      UUID = "killuagodspeed",
      Index = 9888,
      Name = "Killuo Godspeed",
      Rarity = "Mythical",
      Multiplier = 640,
      Area = 6
    },
    urahara = {
      UUID = "urahara",
      Index = 9933,
      Name = "Uraharu",
      Rarity = "Mutant",
      Multiplier = 800,
      Area = 4
    },
    sakura = {
      UUID = "sakura",
      Index = 10000,
      Name = "Sakuro",
      Rarity = "Common",
      Multiplier = 1,
      Area = 0
    },
    yamato = {
      UUID = "yamato",
      Index = 9999,
      Name = "Yamatoon",
      Rarity = "Uncommon",
      Multiplier = 2,
      Area = 0
    },
    uzui = {
      UUID = "uzui",
      Index = 9960,
      Name = "Uzoi",
      Rarity = "Mutant",
      Multiplier = 200,
      Area = 2
    },
    vanessa = {
      UUID = "vanessa",
      Index = 9922,
      Name = "Vanessy",
      Rarity = "Common",
      Multiplier = 32,
      Area = 5
    },
    kakashi = {
      UUID = "kakashi",
      Index = 9998,
      Name = "Kakasho",
      Rarity = "Rare",
      Multiplier = 3,
      Area = 0
    },
    gonadult = {
      UUID = "gonadult",
      Index = 9887,
      Name = "Gom Adult",
      Rarity = "Mutant",
      Multiplier = 3200,
      Area = 6
    },
    jeke = {
      Capsule = "SpookyTwo",
      UUID = "jeke",
      Index = 9896,
      Name = "Jeke",
      Rarity = "Mutant",
      Multiplier = 2400,
      Area = -150
    },
    gaara = {
      UUID = "gaara",
      Index = 9997,
      Name = "Gara",
      Rarity = "Epic",
      Multiplier = 4,
      Area = 0
    },
    kite = {
      UUID = "kite",
      Index = 9890,
      Name = "Kiti",
      Rarity = "Epic",
      Multiplier = 300,
      Area = 6
    },
    jiraya = {
      UUID = "jiraya",
      Index = 9996,
      Name = "Jiraa",
      Rarity = "Legendary",
      Multiplier = 6,
      Area = 0
    },
    nezuko = {
      UUID = "nezuko",
      Index = 9966,
      Name = "Nezoko",
      Rarity = "Common",
      Multiplier = 4,
      Area = 2
    },
    rengoku = {
      UUID = "rengoku",
      Index = 9962,
      Name = "Renguku",
      Rarity = "Legendary",
      Multiplier = 24,
      Area = 2
    },
    naruto = {
      UUID = "naruto",
      Index = 9994,
      Name = "Maruto",
      Rarity = "Mutant",
      Multiplier = 50,
      Area = 0
    },
    tanjirospooky = {
      Capsule = "SpookyOne",
      UUID = "tanjirospooky",
      Index = 9901,
      Name = "Tanjiru Spooky",
      Rarity = "Rare",
      Multiplier = 32,
      Area = -150
    },
    nami = {
      UUID = "nami",
      Index = 9983,
      Name = "Namu",
      Rarity = "Common",
      Multiplier = 2,
      Area = 1
    },
    luffy = {
      UUID = "luffy",
      Index = 9980,
      Name = "Luffo",
      Rarity = "Epic",
      Multiplier = 8,
      Area = 1
    },
    sanji = {
      UUID = "sanji",
      Index = 9981,
      Name = "Sanjo",
      Rarity = "Rare",
      Multiplier = 6,
      Area = 1
    },
    killua = {
      UUID = "killua",
      Index = 9892,
      Name = "killuo",
      Rarity = "Uncommon",
      Multiplier = 88,
      Area = 6
    },
    ussop = {
      UUID = "ussop",
      Index = 9982,
      Name = "Ossup",
      Rarity = "Uncommon",
      Multiplier = 4,
      Area = 1
    },
    zoro = {
      UUID = "zoro",
      Index = 9979,
      Name = "Zoru",
      Rarity = "Legendary",
      Multiplier = 12,
      Area = 1
    },
    magna = {
      UUID = "magna",
      Index = 9920,
      Name = "Magnu",
      Rarity = "Rare",
      Multiplier = 88,
      Area = 5
    },
    asta = {
      UUID = "asta",
      Index = 9918,
      Name = "Aste",
      Rarity = "Legendary",
      Multiplier = 200,
      Area = 5
    },
    kakashispooky = {
      Capsule = "SpookyTwo",
      UUID = "kakashispooky",
      Index = 9900,
      Name = "Kakasho Spooky",
      Rarity = "Rare",
      Multiplier = 64,
      Area = -150
    },
    ichigospooky = {
      Capsule = "SpookyOne",
      UUID = "ichigospooky",
      Index = 9902,
      Name = "Ichigu Spooky",
      Rarity = "Uncommon",
      Multiplier = 16,
      Area = -150
    },
    shanks = {
      UUID = "shanks",
      Index = 9977,
      Name = "Shunks",
      Rarity = "Mutant",
      Multiplier = 100,
      Area = 1
    },
    eren = {
      UUID = "eren",
      Index = 9948,
      Name = "Erun",
      Rarity = "Uncommon",
      Multiplier = 16,
      Area = 3
    },
    shinji = {
      UUID = "shinji",
      Index = 9934,
      Name = "Shinjo",
      Rarity = "Mythical",
      Multiplier = 160,
      Area = 4
    },
    tanjiro = {
      UUID = "tanjiro",
      Index = 9964,
      Name = "Tanjyro",
      Rarity = "Rare",
      Multiplier = 12,
      Area = 2
    },
    gon = {
      UUID = "gon",
      Index = 9893,
      Name = "Gom",
      Rarity = "Common",
      Multiplier = 64,
      Area = 6
    },
    netero = {
      UUID = "netero",
      Index = 9889,
      Name = "Neteru",
      Rarity = "Legendary",
      Multiplier = 440,
      Area = 6
    },
    moriaspooky = {
      Capsule = "SpookyTwo",
      UUID = "moriaspooky",
      Index = 9897,
      Name = "Morio Spooky",
      Rarity = "Mythical",
      Multiplier = 400,
      Area = -150
    },
    noelle = {
      UUID = "noelle",
      Index = 9921,
      Name = "Noelli",
      Rarity = "Uncommon",
      Multiplier = 48,
      Area = 5
    },
    zenitsu = {
      UUID = "zenitsu",
      Index = 9963,
      Name = "Zenitso",
      Rarity = "Epic",
      Multiplier = 16,
      Area = 2
    },
    hisokaexclusive = {
      UUID = "hisokaexclusive",
      Index = 0,
      Name = "Hisoka Exclusive",
      Rarity = "Exclusive",
      Multiplier = 400,
      Area = -99
    },
    levy = {
      UUID = "levy",
      Index = 9943,
      Name = "Leyv",
      Rarity = "Mutant",
      Multiplier = 400,
      Area = 3
    },
    yami = {
      UUID = "yami",
      Index = 9916,
      Name = "Yaml",
      Rarity = "Mutant",
      Multiplier = 1600,
      Area = 5
    },
    inosuke = {
      UUID = "inosuke",
      Index = 9965,
      Name = "Inosoke",
      Rarity = "Uncommon",
      Multiplier = 8,
      Area = 2
    },
    yuno = {
      UUID = "yuno",
      Index = 9917,
      Name = "Yunk",
      Rarity = "Mythical",
      Multiplier = 320,
      Area = 5
    },
    renji = {
      UUID = "renji",
      Index = 9937,
      Name = "Renju",
      Rarity = "Uncommon",
      Multiplier = 32,
      Area = 4
    },
    magnaspooky = {
      Capsule = "SpookyOne",
      UUID = "magnaspooky",
      Index = 9904,
      Name = "Magnu Spooky",
      Rarity = "Common",
      Multiplier = 4,
      Area = -150
    },
    armin = {
      UUID = "armin",
      Index = 9947,
      Name = "Armen",
      Rarity = "Rare",
      Multiplier = 24,
      Area = 3
    },
    erenspooky = {
      Capsule = "SpookyTwo",
      UUID = "erenspooky",
      Index = 9899,
      Name = "Erun Spooky",
      Rarity = "Epic",
      Multiplier = 100,
      Area = -150
    },
    tanjiroblue = {
      UUID = "tanjiroblue",
      Index = 9961,
      Name = "Tanjiru Blue",
      Rarity = "Mythical",
      Multiplier = 40,
      Area = 2
    },
    erwin = {
      UUID = "erwin",
      Index = 9944,
      Name = "Erwon",
      Rarity = "Mythical",
      Multiplier = 80,
      Area = 3
    },
    luffyspooky = {
      Capsule = "SpookyOne",
      UUID = "luffyspooky",
      Index = 9905,
      Name = "Luffo Spooky",
      Rarity = "Common",
      Multiplier = 2,
      Area = -150
    },
    hytsugaia = {
      UUID = "hytsugaia",
      Index = 9938,
      Name = "Hytsugaiau",
      Rarity = "Common",
      Multiplier = 16,
      Area = 4
    },
    rukia = {
      UUID = "rukia",
      Index = 9934,
      Name = "Rukih",
      Rarity = "Legendary",
      Multiplier = 96,
      Area = 4
    },
    yamamoto = {
      UUID = "yamamoto",
      Index = 9935,
      Name = "Yamamotu",
      Rarity = "Epic",
      Multiplier = 64,
      Area = 4
    },
    sanjispooky = {
      Capsule = "SpookyOne",
      UUID = "sanjispooky",
      Index = 9903,
      Name = "Sanju Spooky",
      Rarity = "Uncommon",
      Multiplier = 8,
      Area = -150
    },
    pupu = {
      UUID = "pupu",
      Index = 9885,
      Name = "Pupu",
      Rarity = "Mutant",
      Multiplier = 5000,
      Area = 6
    },
    mihawk = {
      UUID = "mihawk",
      Index = 9978,
      Name = "Mihowk",
      Rarity = "Mythical",
      Multiplier = 20,
      Area = 1
    },
    hange = {
      UUID = "hange",
      Index = 9949,
      Name = "Hangi",
      Rarity = "Common",
      Multiplier = 8,
      Area = 3
    },
    connie = {
      UUID = "connie",
      Index = 9946,
      Name = "Cinnie",
      Rarity = "Epic",
      Multiplier = 32,
      Area = 3
    },
    ulquiorraspooky = {
      Capsule = "SpookyTwo",
      UUID = "ulquiorraspooky",
      Index = 9898,
      Name = "Ulquiorro Spooky",
      Rarity = "Legendary",
      Multiplier = 320,
      Area = -150
    },
    hisoka = {
      UUID = "hisoka",
      Index = 9891,
      Name = "Hisoki",
      Rarity = "Rare",
      Multiplier = 176,
      Area = 6
    }
  }

-- Function to get the remote event
local function GetRemoteEvent()
    for _, child in ipairs(ReplicatedStorage:GetChildren()) do
        if child:IsA("Folder") then
            for _, remote in ipairs(child:GetChildren()) do
                if remote:IsA("RemoteEvent") then
                    return remote
                end
            end
        end
    end
    return nil
end

-- Function to find UUID and area based on avatar name
local function FindAvatarDataByName(name)
    for _, avatar in pairs(Decompile) do
        if avatar.Name == name then
            return avatar.UUID, avatar.Area
        end
    end
    return nil, nil
end

-- Function to change world area once when toggle is activated
local function ChangeWorld(area)
    local args = {

        [2] = "System",
        [3] = "Islands",
        [4] = "Teleport",
        [5] = area
    }

    local Remote = GetRemoteEvent()
    if Remote then
        Remote:FireServer(unpack(args))
    else
        warn("Remote event not found.")
    end
end

-- Function to teleport player to enemy and attack
local function AttackEnemies()
    local avatarName = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.ID.Text

    for _, enemy in ipairs(Workspace._Enemies:GetChildren()) do
        if enemy.Name == avatarName then
            local offset = CFrame.new(0, 0, -5)
            LocalPlayer.Character.HumanoidRootPart.CFrame = enemy.HumanoidRootPart.CFrame * offset
            wait(0.5)
            
            while enemy:GetAttribute("Health") and enemy:GetAttribute("Health") > 0 do
                -- Add attack code here
                wait(0.1)
            end
        end
    end
end

-- Paragraph to display avatar status information
local statusParagraph = Tabs.Autofarm:AddParagraph({
    Title = "Avatar Status",
    Content = ""
})

-- Toggle for Auto Rank Up
local RankUp = Tabs.Autofarm:AddToggle("RankUp", {Title = "Auto Avatar Level", Default = false})

RankUp:OnChanged(function()
    AttackRunning = RankUp.Value

    if AttackRunning then
        local avatarName = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.ID.Text
        local _, area = FindAvatarDataByName(avatarName)
        
        if area then
            ChangeWorld(area)
            wait(2)
        end

        -- Start parallel loop for updating Paragraph status
        spawn(function()
            while AttackRunning do
                local levelText = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.Level.Text
                local valueText = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.Value.Text
                local multiplierText = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.Multiplier.Text

                statusParagraph:SetDesc("Level: " .. levelText .. "\nValue: " .. valueText .. "\nMultiplier: " .. multiplierText)
                wait(1)  -- Update every second
            end
        end)

        -- Loop to attack enemies until target level is reached
        while AttackRunning do
            local levelText = LocalPlayer.PlayerGui.Center.AvatarInfo.Content.Level.Text
            local level = tonumber(levelText:match("Level: (%d+)"))

            if level and level >= targetLevel then
                print("Target level reached:", targetLevel)
                break
            else
                AttackEnemies()
                wait(1)
            end
        end
    else
        AttackRunning = false
    end
end)

-- Input for target level selection
local LevelInput = Tabs.Autofarm:AddInput("LevelInput", {
    Title = "Target Level",
    Default = "50",
    Numeric = true,
    Placeholder = "Enter target level",
    Callback = function(value)
        targetLevel = tonumber(value) or 3
    end
})








local button = Tabs.Misc:AddButton({
    Title = "FPS Boost",
    Description = "Applies FPS optimization settings",
    Callback = function()
        _G.Ignore = {}
        _G.Settings = {
            Players = {
                ["Ignore Me"] = true,
                ["Ignore Others"] = true,
                ["Ignore Tools"] = true
            },
            Meshes = {
                NoMesh = false,
                NoTexture = false,
                Destroy = false
            },
            Images = {
                Invisible = true,
                Destroy = false
            },
            Explosions = {
                Smaller = true,
                Invisible = false, -- Not for PVP games
                Destroy = false -- Not for PVP games
            },
            Particles = {
                Invisible = true,
                Destroy = false
            },
            TextLabels = {
                LowerQuality = true,
                Invisible = false,
                Destroy = false
            },
            MeshParts = {
                LowerQuality = true,
                Invisible = false,
                NoTexture = false,
                NoMesh = false,
                Destroy = false
            },
            Other = {
                ["FPS Cap"] = 360, -- true to uncap
                ["No Camera Effects"] = true,
                ["No Clothes"] = true,
                ["Low Water Graphics"] = true,
                ["No Shadows"] = true,
                ["Low Rendering"] = true,
                ["Low Quality Parts"] = true,
                ["Low Quality Models"] = true,
                ["Reset Materials"] = true,
            }
        }
        loadstring(game:HttpGet("https://raw.githubusercontent.com/dkhub27/FPSBost/refs/heads/main/BosstFps.lua"))()
    end
})


--SETTINGS
Tabs.Misc:AddSection("Anti Afk")
--Anti-AFK

local AntiAFKToggle = Tabs.Misc:AddToggle("AntiAFK", {Title = "Anti AFK", Default = true})

-- Variável para armazenar a conexão do evento
local antiAFKConnection

AntiAFKToggle:OnChanged(function()
    if AntiAFKToggle.Value then
        -- Ativar Anti-AFK
        local bb = game:service'VirtualUser'
        antiAFKConnection = game:service'Players'.LocalPlayer.Idled:connect(function()
            bb:CaptureController()
            bb:ClickButton2(Vector2.new())
        end)
    else
        -- Desativar Anti-AFK
        if antiAFKConnection then
            antiAFKConnection:Disconnect()
            antiAFKConnection = nil
        end
    end
end)



-- Server hop functionality
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false

local File = pcall(function()
    AllIDs = HttpService:JSONDecode(readfile("server-hop-temp.json"))
end)

if not File then
    table.insert(AllIDs, actualHour)
    pcall(function()
        writefile("server-hop-temp.json", HttpService:JSONEncode(AllIDs))
    end)
end

local function TPReturner(placeId)
    local Site
    if foundAnything == "" then
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. placeId .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end

    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end

    local num = 0
    for i, v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _, Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("server-hop-temp.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("server-hop-temp.json", HttpService:JSONEncode(AllIDs))
                    wait()
                    TeleportService:TeleportToPlaceInstance(placeId, ID, game.Players.LocalPlayer)
                end)
                wait()
            end
        end
    end
end

local function startTeleporting(placeId)
    while wait() do -- Ajustado para esperar 5 segundos entre tentativas de server hop
        pcall(function()
            TPReturner(placeId)
            if foundAnything ~= "" then
                TPReturner(placeId)
            end
        end)
    end
end


Tabs.Misc:AddButton({
    Title = "Server Hop",
    Description = "",
    Callback = function()
        startTeleporting(game.PlaceId)
    end
})


Tabs.Misc:AddSection("WallSpeed")
local Slider = Tabs.Misc:AddSlider("Slider", {
    Title = "WallSpeed",
    Description = "Control the speed of the wall",
    Default = 0,
    Min = 0,
    Max = 500,
    Rounding = 1,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
    end
})

Slider:OnChanged(function(Value)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
end)

Slider:SetValue(60)




Tabs.Misc:AddSection("Security")
-- Pega o nome do player local
local player = game.Players.LocalPlayer
local playerName = player.Name

-- Define o workspace path do player local
local character = workspace._Characters:FindFirstChild(playerName)
local textLabel = character and character:FindFirstChild("Head") and character.Head:FindFirstChild("Display") and character.Head.Display:FindFirstChild("Id") and character.Head.Display.Id:FindFirstChild("TextLabel")
local levelLabel = character and character:FindFirstChild("Head") and character.Head:FindFirstChild("Display") and character.Head.Display:FindFirstChild("Level") and character.Head.Display.Level:FindFirstChild("TextLabel")

-- Função para atualizar apenas o nome
local function updateName(newName)
    if textLabel then
        textLabel.Text = newName -- Atualiza o texto do TextLabel do nome
    end
end

-- Input para o nome
local PlayerNameInput = Tabs.Misc:AddInput("PlayerNameInput", {
    Title = "Name Visual",
    Default = "Nami Hub",
    Numeric = false,
    Finished = false,
    Placeholder = "Nami Hub",
    Callback = function(value)
        local chosenName = value ~= "" and value or "Nami Hub"
        updateName(chosenName)
    end
})

-- Input para o nível (não inicializa o nível automaticamente)
local LevelInput = Tabs.Misc:AddInput("LevelInput", {
    Title = "Level Visual",
    Default = "99", -- Nível padrão caso o jogador não escolha
    Numeric = false,
    Finished = false,
    Placeholder = "99",
    Callback = function(value)
        local chosenLevel = value ~= "" and value or "99"
        if levelLabel then
            levelLabel.Text = chosenLevel -- Atualiza o nível apenas quando o input é alterado
        end
    end
})

-- Função para aplicar o efeito de cor RGB apenas ao nome
local function applyRGBEffect()
    local hue = 0
    while wait(0.1) do
        hue = (hue + 1) % 360
        local color = Color3.fromHSV(hue / 360, 1, 1)
        if textLabel then
            textLabel.TextColor3 = color
        end
    end
end

-- Inicia a animação RGB apenas no nome
spawn(applyRGBEffect)

Tabs.GameMode:AddSection("Boss")

-- Lista de bosses e seus IDs para args[5]
local bossIslands = {
    Pain = 0,
    Meruem = 6,
    Ihwazh = 4,
    Elfmag = 5,
    Colotitan = 3,
    ["Bag Mom"] = 1,
    Akoza = 2,
}

-- Função principal para teleportar e atacar o boss
local function teleportToBoss(bossName)
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")

    if humanoidRootPart then
        -- Salva a posição do jogador antes do teleporte
        local savedPosition = humanoidRootPart.CFrame

        -- Verifica se o boss existe em ReplicatedStorage
        local bossExists = game:GetService("ReplicatedStorage")._Client.Enemies:FindFirstChild(bossName)

        if bossExists then
            -- Enviar evento remoto para teleporte com o ID do boss
            local Remote = GetRemoteEvent()
            local args = {
                [1] = "01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00101110 01110100 01101000 01110010 01100101 01100001 01100100 01011111 01110011 01100101 01100011 01110101 01110010 01101001 01110100 01111001 00111010 00110001 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101111 01101110 01101110 01100101 01100011 01110100 01101001 01101111 01101110 00111010 00110001 00110101 00110110 00100000 01100110 01110101 01101110 01100011 01110100 01101001 01101111 01101110 00100000 01110011 01100101 01101110 01100100 00001010 01010010 01100101 01110000 01101100 01101001 01100011 01100001 01110100 01100101 01100100 01010011 01110100 01101111 01110010 01100001 01100111 01100101 00101110 01010110 01101001 01101110 01101110 01111001 01000110 01110010 01100001 01101101 01100101 01110111 01101111 01110010 01101011 00101110 01001100 01101001 01100010 01110010 01100001 01110010 01111001 00101110 01000011 01101100 01101001 01100101 01101110 01110100 00101110 01010100 01100101 01101100 01100101 01110000 01101111 01110010 01110100 01010011 01100101 01110100 01110101 01110000 00111010 00110101 00110001 00001010",
                [2] = "System",
                [3] = "Islands",
                [4] = "Teleport",
                [5] = bossIslands[bossName] or 3
            }

            if Remote then
                Remote:FireServer(unpack(args))
                wait(3)
            end

            -- Verificar se o boss está em workspace._Enemies e ignorar se o jogador morrer
            local bossInWorkspace = workspace._Enemies:FindFirstChild(bossName)
            if bossInWorkspace and bossInWorkspace:FindFirstChild("HumanoidRootPart") then
                humanoidRootPart.CFrame = bossInWorkspace.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4)

                -- Espera até o boss morrer ou o jogador morrer
                repeat
                    wait(0.5)
                until not workspace._Enemies:FindFirstChild(bossName) or not player.Character

                -- Verifica novamente se o jogador está vivo antes de continuar
                if player.Character then
                    -- Enviar evento remoto com args[5] = 0 para finalizar o ataque
                    args[5] = 0
                    Remote:FireServer(unpack(args))
                    wait(3)

                    -- Retorna o jogador para a posição salva
                    humanoidRootPart.CFrame = savedPosition
                end
            end
        end
    end
end

-- Toggle para ativar/desativar o auto boss
local LoopToggle = Tabs.GameMode:AddToggle("LoopToggle", {Title = "Auto All Boss", Default = false})

LoopToggle:OnChanged(function()
    while LoopToggle.Value do
        for bossName, _ in pairs(bossIslands) do
            if not LoopToggle.Value then break end
            teleportToBoss(bossName)
        end
        wait(1) -- Pequeno intervalo entre as verificações para evitar sobrecarga
    end
end)













Tabs.GameMode:AddSection("Others")

local TrialEasy = Tabs.GameMode:AddToggle("TrialEasy", {Title = "AutoMobs", Default = false })
local Teleporting = false

TrialEasy:OnChanged(function(enabled)
    if enabled then
        Teleporting = true
    else
        Teleporting = false
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if Teleporting then
        for _, child in ipairs(workspace._Enemies:GetChildren()) do
            if child:FindFirstChild("HumanoidRootPart") then
                local health = child:GetAttribute("Health")
                if health and health > 0 then
                    -- Ajusta o CFrame para ficar a uma distância de 5 unidades acima do inimigo
                    local targetCFrame = child.HumanoidRootPart.CFrame * CFrame.new(0, 0, 4)
                    Char.HumanoidRootPart.CFrame = targetCFrame
                    break -- Teleporta para um inimigo por vez
                end
            end
        end
    end
end)

Tabs.Settings:AddSection("Icon")



-- Destroy existing UI if present
for _, child in pairs(game:GetService("CoreGui"):GetChildren()) do
    if child.Name == "TrueFalseUi" then
        child:Destroy()
    end
end

-- Create main UI elements
local ThunderScreen = Instance.new("ScreenGui")
local ThunderToggleUI = Instance.new("TextButton")
local ThunderCornerUI = Instance.new("UICorner")
local ThunderImageUI = Instance.new("ImageLabel")

ThunderScreen.Name = "TrueFalseUi"
ThunderScreen.Parent = game.CoreGui
ThunderScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

ThunderToggleUI.Name = "ThunderToggleUI"
ThunderToggleUI.Parent = ThunderScreen
ThunderToggleUI.BackgroundColor3 = Color3.fromRGB(31, 31, 31)
ThunderToggleUI.BorderSizePixel = 0
ThunderToggleUI.Position = UDim2.new(0.2, -50, 0.1, -25)
ThunderToggleUI.Size = UDim2.new(0, 50, 0, 50)
ThunderToggleUI.Font = Enum.Font.FredokaOne
ThunderToggleUI.Text = ""
ThunderToggleUI.TextColor3 = Color3.fromRGB(0, 0, 0)
ThunderToggleUI.TextSize = 14.000
ThunderToggleUI.Draggable = true

ThunderCornerUI.Name = "ThunderCornerUI"
ThunderCornerUI.Parent = ThunderToggleUI

ThunderImageUI.Name = "MODILEMAGE"
ThunderImageUI.Parent = ThunderToggleUI
ThunderImageUI.BackgroundColor3 = Color3.fromRGB(192, 192, 192)
ThunderImageUI.BackgroundTransparency = 1.000
ThunderImageUI.BorderSizePixel = 0
ThunderImageUI.Position = UDim2.new(0, 0, 0, 0)
ThunderImageUI.Size = UDim2.new(0, 50, 0, 50)
ThunderImageUI.Image = "rbxassetid://74770369450325"
ThunderImageUI.BackgroundTransparency = 1 -- Garante que o fundo da imagem seja transparente

-- Handle minimization on click
ThunderToggleUI.MouseButton1Click:Connect(function()
    Window:Minimize()
end)

-- Dragging functionality
local dragging = false
local dragInput, mousePos, framePos

local function updateInput(input)
    local delta = input.Position - mousePos
    ThunderToggleUI.Position = UDim2.new(
        framePos.X.Scale,
        framePos.X.Offset + delta.X,
        framePos.Y.Scale,
        framePos.Y.Offset + delta.Y
    )
end

ThunderToggleUI.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        mousePos = input.Position
        framePos = ThunderToggleUI.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

ThunderToggleUI.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

game:GetService("UserInputService").InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateInput(input)
    end
end)

-- Add the slider to adjust icon and background size
local Slider = Tabs.Settings:AddSlider("IconSize", {
    Title = "Icon Size",
    Description = "Adjust the size of the icon",
    Default = 50,
    Min = 10,
    Max = 200,
    Rounding = 0,
    Callback = function(Value)
        ThunderToggleUI.Size = UDim2.new(0, Value, 0, Value)
        ThunderImageUI.Size = UDim2.new(0, Value, 0, Value)
    end
})

Slider:OnChanged(function(Value)
    ThunderToggleUI.Size = UDim2.new(0, Value, 0, Value)
    ThunderImageUI.Size = UDim2.new(0, Value, 0, Value)
end)


Slider:SetValue(80)

local imageMap = {
    ["NamiV3"] = "rbxassetid://129033885767273",
    ["NamiFREEZA"] = "rbxassetid://76534613642214",
    ["Namidark"] = "rbxassetid://18871597955",
    ["dk hub"] = "rbxassetid://18871582266",
    ["Saber"] = "rbxassetid://18865078724",
    ["Nobara"] = "rbxassetid://18865487152",
    ["Sukuna"] = "rbxassetid://18865484065",
    ["Draken"] = "rbxassetid://18865481141",
    ["Mikey"] = "rbxassetid://18865479654",
    ["Rukia"] = "rbxassetid://18865573754",
    ["Ichigo"] = "rbxassetid://18865461960",
    ["Luffy"] = "rbxassetid://18865471516",
    ["Luffy2"] = "rbxassetid://18865469422",
    ["Ayanokoji"] = "rbxassetid://18865467682",
    ["Girl"] = "rbxassetid://18865465125",
    ["Shadow"] = "rbxassetid://18865454832",
    ["Kaneki"] = "rbxassetid://18865477827",
    ["juuzou"] = "rbxassetid://18865474817",
    ["Nami4"] = "rbxassetid://18854354644",
    ["NAMI HUB"] = "rbxassetid://18854223882",
    ["Nami3"] = "rbxassetid://18624499772",
    ["NamiV2"] = "rbxassetid://18680430610",
    ["Nami"] = "rbxassetid://18854533012",
    ["Suzuya"] = "rbxassetid://18854701794",
    ["Gojo"] = "rbxassetid://18854699086",
    ["Maki"] = "rbxassetid://18865727284",
    ["Todo"] = "rbxassetid://18854693396",
    ["Yuta"] = "rbxassetid://18854692346",
    ["Yuki"] = "rbxassetid://18854691226",
    ["Naruto"] = "rbxassetid://18854562123"
}

-- Create dropdown values and friendly names array
local imageNames = {}
for name, _ in pairs(imageMap) do
    table.insert(imageNames, name)
end

local worldDropdown = Tabs.Settings:AddDropdown("ImageDropdown", {
    Title = "Select Icon",
    Values = imageNames,
    Multi = false,
    Default = "NamiV3",
    Callback = function(selectedName)
        local selectedImage = imageMap[selectedName]
        if ThunderImageUI then
            ThunderImageUI.Image = selectedImage
        end
    end
})


Tabs.Misc:AddSection("Others")

local SavedKeyPath = "SavedGameIds.txt"
local selectedRaidId -- Variável para armazenar o ID selecionado
local selectedRaidName -- Variável para armazenar o nome selecionado
local RaidDropdown -- Variável para armazenar a dropdown
local savedGames = {} -- Tabela para armazenar os jogos salvos (nome e ID)
local gameName -- Variável para armazenar o nome do jogo a ser salvo

-- Função para salvar o ID e o nome do jogo em um arquivo
local function saveKey(name, key)
    if writefile then
        for _, game in ipairs(savedGames) do
            if game.id == key then
                return -- Sai da função se o ID já foi salvo
            end
        end

        -- Salva no formato "nome:ID"
        appendfile(SavedKeyPath, name .. ":" .. key .. "\n")
    end
end

-- Função para carregar IDs e nomes salvos
local function loadSavedKeys()
    savedGames = {}
    if isfile(SavedKeyPath) then
        local content = readfile(SavedKeyPath)
        for line in string.gmatch(content, "[^\r\n]+") do
            local name, id = line:match("([^:]+):([^:]+)")
            if name and id then
                table.insert(savedGames, { name = name, id = id })
            end
        end
    end

    local names = {}
    for _, game in ipairs(savedGames) do
        table.insert(names, game.name)
    end
    return names
end

-- Função para atualizar a lista de IDs no dropdown
local function RefreshGameList()
    local savedNames = loadSavedKeys()
    if RaidDropdown then
        if #savedNames > 0 then
            RaidDropdown:SetValues(savedNames)
        else
            RaidDropdown:SetValues({"No IDs Found"})
        end
    end
end

-- Função para deletar o ID selecionado
local function deleteSelectedKey()
    if selectedRaidName then
        for i, game in ipairs(savedGames) do
            if game.name == selectedRaidName then
                table.remove(savedGames, i)
                break
            end
        end

        local content = ""
        for _, game in ipairs(savedGames) do
            content = content .. game.name .. ":" .. game.id .. "\n"
        end
        writefile(SavedKeyPath, content)

        selectedRaidId = nil
        selectedRaidName = nil
        RefreshGameList()
    end
end

-- Botão para teleportar o jogador para o jogo com o ID selecionado
Tabs.Misc:AddButton({
    Title = "Teleport to Selected Game",
    Callback = function()
        if selectedRaidId then
            game:GetService("TeleportService"):Teleport(tonumber(selectedRaidId))
        end
    end
})

-- Dropdown para selecionar os nomes dos IDs salvos
RaidDropdown = Tabs.Misc:AddDropdown("SelectRaid", {
    Title = "Select",
    Values = loadSavedKeys(),
    Default = "",
    Multi = false,
    Callback = function(value)
        for _, game in ipairs(savedGames) do
            if game.name == value then
                selectedRaidId = game.id
                selectedRaidName = game.name
                break
            end
        end
    end
})

-- Botão para atualizar a lista de IDs no dropdown manualmente
Tabs.Misc:AddButton({
    Title = "Refresh ID List",
    Callback = RefreshGameList
})

-- Entrada para o usuário digitar o nome para o ID
local GameNameInput = Tabs.Misc:AddInput("GameNameInput", {
    Title = "Game Name",
    Placeholder = "Enter a name for the game ID",
    Callback = function(value)
        gameName = value
    end
})

-- Botão para salvar o ID atual do jogo e atualizar a dropdown
Tabs.Misc:AddButton({
    Title = "Save New ID",
    Callback = function()
        if gameName and gameName ~= "" then
            local newId = tostring(game.PlaceId)
            saveKey(gameName, newId)
            RefreshGameList()
        end
    end
})

-- Botão para deletar o ID selecionado
Tabs.Misc:AddButton({
    Title = "Delete Selected ID",
    Callback = deleteSelectedKey
})


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()





--destroy

local function removePartsByPrefix(prefix)
    -- Lista de serviços onde as partes podem ter sido criadas
    local services = {
        game.Workspace, game.CoreGui, game.ReplicatedStorage,
        game.Lighting, game.CorePackages, game.ReplicatedFirst, game.StarterPlayer,
        game.TextChatService, game.MarketplaceService, game.StarterGui, game.NetworkClient,
        game.StarterPack, game.Teams, game.MaterialService,
        game.SoundService, game.Chat
    }

    -- Itera através dos serviços para encontrar e remover as partes
    for _, service in ipairs(services) do
        for _, child in ipairs(service:GetDescendants()) do
            if child:IsA("Part") and child.Name:sub(1, #prefix) == prefix then
                child:Destroy()
            end
        end
    end
end

-- Chame a função para remover as partes cujo nome começa com "dknami"
removePartsByPrefix("dknami")
